<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyx.undergraduatejob.mapper.AutStudentMapper">
  <resultMap id="BaseResultMap" type="com.lyx.undergraduatejob.pojo.AutStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="proposer_name" jdbcType="VARCHAR" property="proposerName" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="proposer_phone" jdbcType="VARCHAR" property="proposerPhone" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="student_num" jdbcType="VARCHAR" property="studentNum" />
    <result column="specialty" jdbcType="VARCHAR" property="specialty" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="student_status" jdbcType="INTEGER" property="studentStatus" />
    <result column="related_picture" jdbcType="INTEGER" property="relatedPicture" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, proposer_name, id_card, proposer_phone, school, student_num, specialty, 
    education, status, student_status, related_picture, create_time
  </sql>
  <select id="selectByExample" parameterType="com.lyx.undergraduatejob.pojo.AutStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aut_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from aut_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from aut_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lyx.undergraduatejob.pojo.AutStudentExample">
    delete from aut_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lyx.undergraduatejob.pojo.AutStudent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into aut_student (user_id, proposer_name, id_card, 
      proposer_phone, school, student_num, 
      specialty, education, status, 
      student_status, related_picture, create_time
      )
    values (#{userId,jdbcType=INTEGER}, #{proposerName,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, 
      #{proposerPhone,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{studentNum,jdbcType=VARCHAR}, 
      #{specialty,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{studentStatus,jdbcType=INTEGER}, #{relatedPicture,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lyx.undergraduatejob.pojo.AutStudent">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into aut_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="proposerName != null">
        proposer_name,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
      <if test="proposerPhone != null">
        proposer_phone,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="studentNum != null">
        student_num,
      </if>
      <if test="specialty != null">
        specialty,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="studentStatus != null">
        student_status,
      </if>
      <if test="relatedPicture != null">
        related_picture,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="proposerName != null">
        #{proposerName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="proposerPhone != null">
        #{proposerPhone,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null">
        #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="studentStatus != null">
        #{studentStatus,jdbcType=INTEGER},
      </if>
      <if test="relatedPicture != null">
        #{relatedPicture,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lyx.undergraduatejob.pojo.AutStudentExample" resultType="java.lang.Long">
    select count(*) from aut_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update aut_student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.proposerName != null">
        proposer_name = #{record.proposerName,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
      <if test="record.proposerPhone != null">
        proposer_phone = #{record.proposerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNum != null">
        student_num = #{record.studentNum,jdbcType=VARCHAR},
      </if>
      <if test="record.specialty != null">
        specialty = #{record.specialty,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.studentStatus != null">
        student_status = #{record.studentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.relatedPicture != null">
        related_picture = #{record.relatedPicture,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update aut_student
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      proposer_name = #{record.proposerName,jdbcType=VARCHAR},
      id_card = #{record.idCard,jdbcType=VARCHAR},
      proposer_phone = #{record.proposerPhone,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      student_num = #{record.studentNum,jdbcType=VARCHAR},
      specialty = #{record.specialty,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      student_status = #{record.studentStatus,jdbcType=INTEGER},
      related_picture = #{record.relatedPicture,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyx.undergraduatejob.pojo.AutStudent">
    update aut_student
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="proposerName != null">
        proposer_name = #{proposerName,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
      <if test="proposerPhone != null">
        proposer_phone = #{proposerPhone,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="studentNum != null">
        student_num = #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="specialty != null">
        specialty = #{specialty,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="studentStatus != null">
        student_status = #{studentStatus,jdbcType=INTEGER},
      </if>
      <if test="relatedPicture != null">
        related_picture = #{relatedPicture,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyx.undergraduatejob.pojo.AutStudent">
    update aut_student
    set user_id = #{userId,jdbcType=INTEGER},
      proposer_name = #{proposerName,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      proposer_phone = #{proposerPhone,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      student_num = #{studentNum,jdbcType=VARCHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      student_status = #{studentStatus,jdbcType=INTEGER},
      related_picture = #{relatedPicture,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>