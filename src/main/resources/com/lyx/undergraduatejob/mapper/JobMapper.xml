<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lyx.undergraduatejob.mapper.JobMapper">
  <resultMap id="BaseResultMap" type="com.lyx.undergraduatejob.pojo.Job">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="push_status" jdbcType="INTEGER" property="pushStatus" />
    <result column="aul_status" jdbcType="INTEGER" property="aulStatus" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="job_desc" jdbcType="VARCHAR" property="jobDesc" />
    <result column="job_type" jdbcType="VARCHAR" property="jobType" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="contacts_phone" jdbcType="VARCHAR" property="contactsPhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="need_num" jdbcType="INTEGER" property="needNum" />
    <result column="part_full" jdbcType="INTEGER" property="partFull" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="close_type" jdbcType="INTEGER" property="closeType" />
    <result column="education" jdbcType="INTEGER" property="education" />
    <result column="work_years" jdbcType="INTEGER" property="workYears" />
    <result column="work_address" jdbcType="VARCHAR" property="workAddress" />
    <result column="detailed_address" jdbcType="VARCHAR" property="detailedAddress" />
    <result column="receive_num" jdbcType="INTEGER" property="receiveNum" />
    <result column="collect_num" jdbcType="INTEGER" property="collectNum" />
    <result column="visit_num" jdbcType="INTEGER" property="visitNum" />
    <result column="job_vip" jdbcType="INTEGER" property="jobVip" />
    <result column="vip_end_time" jdbcType="TIMESTAMP" property="vipEndTime" />
    <result column="push_time" jdbcType="TIMESTAMP" property="pushTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status, push_status, aul_status, job_title, company_id, job_name, job_desc, job_type, 
    contacts, contacts_phone, email, need_num, part_full, salary, close_type, education, 
    work_years, work_address, detailed_address, receive_num, collect_num, visit_num, 
    job_vip, vip_end_time, push_time, create_time
  </sql>
  <select id="selectByExample" parameterType="com.lyx.undergraduatejob.pojo.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lyx.undergraduatejob.pojo.JobExample">
    delete from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lyx.undergraduatejob.pojo.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job (status, push_status, aul_status, 
      job_title, company_id, job_name, 
      job_desc, job_type, contacts, 
      contacts_phone, email, need_num, 
      part_full, salary, close_type, 
      education, work_years, work_address, 
      detailed_address, receive_num, collect_num, 
      visit_num, job_vip, vip_end_time, 
      push_time, create_time)
    values (#{status,jdbcType=INTEGER}, #{pushStatus,jdbcType=INTEGER}, #{aulStatus,jdbcType=INTEGER}, 
      #{jobTitle,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, #{jobName,jdbcType=VARCHAR}, 
      #{jobDesc,jdbcType=VARCHAR}, #{jobType,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{contactsPhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{needNum,jdbcType=INTEGER}, 
      #{partFull,jdbcType=INTEGER}, #{salary,jdbcType=INTEGER}, #{closeType,jdbcType=INTEGER}, 
      #{education,jdbcType=INTEGER}, #{workYears,jdbcType=INTEGER}, #{workAddress,jdbcType=VARCHAR}, 
      #{detailedAddress,jdbcType=VARCHAR}, #{receiveNum,jdbcType=INTEGER}, #{collectNum,jdbcType=INTEGER}, 
      #{visitNum,jdbcType=INTEGER}, #{jobVip,jdbcType=INTEGER}, #{vipEndTime,jdbcType=TIMESTAMP}, 
      #{pushTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lyx.undergraduatejob.pojo.Job">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        status,
      </if>
      <if test="pushStatus != null">
        push_status,
      </if>
      <if test="aulStatus != null">
        aul_status,
      </if>
      <if test="jobTitle != null">
        job_title,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobDesc != null">
        job_desc,
      </if>
      <if test="jobType != null">
        job_type,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="contactsPhone != null">
        contacts_phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="needNum != null">
        need_num,
      </if>
      <if test="partFull != null">
        part_full,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="closeType != null">
        close_type,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="workYears != null">
        work_years,
      </if>
      <if test="workAddress != null">
        work_address,
      </if>
      <if test="detailedAddress != null">
        detailed_address,
      </if>
      <if test="receiveNum != null">
        receive_num,
      </if>
      <if test="collectNum != null">
        collect_num,
      </if>
      <if test="visitNum != null">
        visit_num,
      </if>
      <if test="jobVip != null">
        job_vip,
      </if>
      <if test="vipEndTime != null">
        vip_end_time,
      </if>
      <if test="pushTime != null">
        push_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="pushStatus != null">
        #{pushStatus,jdbcType=INTEGER},
      </if>
      <if test="aulStatus != null">
        #{aulStatus,jdbcType=INTEGER},
      </if>
      <if test="jobTitle != null">
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null">
        #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null">
        #{contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="needNum != null">
        #{needNum,jdbcType=INTEGER},
      </if>
      <if test="partFull != null">
        #{partFull,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="closeType != null">
        #{closeType,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        #{education,jdbcType=INTEGER},
      </if>
      <if test="workYears != null">
        #{workYears,jdbcType=INTEGER},
      </if>
      <if test="workAddress != null">
        #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null">
        #{detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveNum != null">
        #{receiveNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null">
        #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="visitNum != null">
        #{visitNum,jdbcType=INTEGER},
      </if>
      <if test="jobVip != null">
        #{jobVip,jdbcType=INTEGER},
      </if>
      <if test="vipEndTime != null">
        #{vipEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTime != null">
        #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lyx.undergraduatejob.pojo.JobExample" resultType="java.lang.Long">
    select count(*) from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.pushStatus != null">
        push_status = #{record.pushStatus,jdbcType=INTEGER},
      </if>
      <if test="record.aulStatus != null">
        aul_status = #{record.aulStatus,jdbcType=INTEGER},
      </if>
      <if test="record.jobTitle != null">
        job_title = #{record.jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null">
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDesc != null">
        job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null">
        job_type = #{record.jobType,jdbcType=VARCHAR},
      </if>
      <if test="record.contacts != null">
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.contactsPhone != null">
        contacts_phone = #{record.contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.needNum != null">
        need_num = #{record.needNum,jdbcType=INTEGER},
      </if>
      <if test="record.partFull != null">
        part_full = #{record.partFull,jdbcType=INTEGER},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.closeType != null">
        close_type = #{record.closeType,jdbcType=INTEGER},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=INTEGER},
      </if>
      <if test="record.workYears != null">
        work_years = #{record.workYears,jdbcType=INTEGER},
      </if>
      <if test="record.workAddress != null">
        work_address = #{record.workAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.detailedAddress != null">
        detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveNum != null">
        receive_num = #{record.receiveNum,jdbcType=INTEGER},
      </if>
      <if test="record.collectNum != null">
        collect_num = #{record.collectNum,jdbcType=INTEGER},
      </if>
      <if test="record.visitNum != null">
        visit_num = #{record.visitNum,jdbcType=INTEGER},
      </if>
      <if test="record.jobVip != null">
        job_vip = #{record.jobVip,jdbcType=INTEGER},
      </if>
      <if test="record.vipEndTime != null">
        vip_end_time = #{record.vipEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pushTime != null">
        push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      push_status = #{record.pushStatus,jdbcType=INTEGER},
      aul_status = #{record.aulStatus,jdbcType=INTEGER},
      job_title = #{record.jobTitle,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=VARCHAR},
      job_type = #{record.jobType,jdbcType=VARCHAR},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      contacts_phone = #{record.contactsPhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      need_num = #{record.needNum,jdbcType=INTEGER},
      part_full = #{record.partFull,jdbcType=INTEGER},
      salary = #{record.salary,jdbcType=INTEGER},
      close_type = #{record.closeType,jdbcType=INTEGER},
      education = #{record.education,jdbcType=INTEGER},
      work_years = #{record.workYears,jdbcType=INTEGER},
      work_address = #{record.workAddress,jdbcType=VARCHAR},
      detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      receive_num = #{record.receiveNum,jdbcType=INTEGER},
      collect_num = #{record.collectNum,jdbcType=INTEGER},
      visit_num = #{record.visitNum,jdbcType=INTEGER},
      job_vip = #{record.jobVip,jdbcType=INTEGER},
      vip_end_time = #{record.vipEndTime,jdbcType=TIMESTAMP},
      push_time = #{record.pushTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lyx.undergraduatejob.pojo.Job">
    update job
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="pushStatus != null">
        push_status = #{pushStatus,jdbcType=INTEGER},
      </if>
      <if test="aulStatus != null">
        aul_status = #{aulStatus,jdbcType=INTEGER},
      </if>
      <if test="jobTitle != null">
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null">
        job_desc = #{jobDesc,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null">
        job_type = #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="contactsPhone != null">
        contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="needNum != null">
        need_num = #{needNum,jdbcType=INTEGER},
      </if>
      <if test="partFull != null">
        part_full = #{partFull,jdbcType=INTEGER},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="closeType != null">
        close_type = #{closeType,jdbcType=INTEGER},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=INTEGER},
      </if>
      <if test="workYears != null">
        work_years = #{workYears,jdbcType=INTEGER},
      </if>
      <if test="workAddress != null">
        work_address = #{workAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null">
        detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiveNum != null">
        receive_num = #{receiveNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null">
        collect_num = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="visitNum != null">
        visit_num = #{visitNum,jdbcType=INTEGER},
      </if>
      <if test="jobVip != null">
        job_vip = #{jobVip,jdbcType=INTEGER},
      </if>
      <if test="vipEndTime != null">
        vip_end_time = #{vipEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pushTime != null">
        push_time = #{pushTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lyx.undergraduatejob.pojo.Job">
    update job
    set status = #{status,jdbcType=INTEGER},
      push_status = #{pushStatus,jdbcType=INTEGER},
      aul_status = #{aulStatus,jdbcType=INTEGER},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      job_name = #{jobName,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=VARCHAR},
      job_type = #{jobType,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      contacts_phone = #{contactsPhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      need_num = #{needNum,jdbcType=INTEGER},
      part_full = #{partFull,jdbcType=INTEGER},
      salary = #{salary,jdbcType=INTEGER},
      close_type = #{closeType,jdbcType=INTEGER},
      education = #{education,jdbcType=INTEGER},
      work_years = #{workYears,jdbcType=INTEGER},
      work_address = #{workAddress,jdbcType=VARCHAR},
      detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      receive_num = #{receiveNum,jdbcType=INTEGER},
      collect_num = #{collectNum,jdbcType=INTEGER},
      visit_num = #{visitNum,jdbcType=INTEGER},
      job_vip = #{jobVip,jdbcType=INTEGER},
      vip_end_time = #{vipEndTime,jdbcType=TIMESTAMP},
      push_time = #{pushTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>